{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\galerie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalBarSeries, Treemap } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios'); // A card used to contain all data from api\n\n\nexport default function Graphs() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n\n  const fetchEvents = async () => {\n    await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\n  };\n\n  useEffect(() => {\n    fetchEvents(); //console.log( {events} );\n  }, []);\n  var datas = [];\n\n  for (let i = 0; i < events.length; i++) {\n    datas.push({\n      x: i,\n      y: events[i].Album.ImageCount\n    });\n  }\n\n  console.log(\"coucou\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"charts\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart1\",\n      children: /*#__PURE__*/_jsxDEV(XYPlot, {\n        width: 500,\n        height: 500,\n        margin: 70,\n        children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {\n          style: {\n            stroke: '#B7E9ED'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VerticalGridLines, {\n          style: {\n            stroke: '#B7E9ED'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          title: \"Num\\xE9ro de l'\\xE9v\\xE8nement\",\n          style: {\n            line: {\n              stroke: '#ADDDE1'\n            },\n            ticks: {\n              stroke: '#ADDDE1'\n            },\n            text: {\n              stroke: 'none',\n              fill: '#ffffff',\n              fontWeight: 600\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          title: \"Nombre de photos\",\n          style: {\n            text: {\n              stroke: 'none',\n              fill: '#ffffff',\n              fontWeight: 600\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineMarkSeries, {\n          className: \"first-series\",\n          data: datas,\n          style: {\n            strokeWidth: 0.01\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphs, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = Graphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/galerie.js"],"names":["React","useEffect","useState","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","LineMarkSeries","VerticalBarSeries","Treemap","default","axios","require","Graphs","events","setEvents","fetchEvents","get","then","all","data","datas","i","length","push","x","y","Album","ImageCount","console","log","stroke","line","ticks","text","fill","fontWeight","strokeWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineMarkSeries,\r\n  VerticalBarSeries,\r\n  Treemap\r\n} from 'react-vis';\r\nconst { default: axios } = require('axios');\r\n\r\n// A card used to contain all data from api\r\nexport default function Graphs(){\r\n\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const fetchEvents = async () => {\r\n        await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n        //console.log( {events} );\r\n    }, []);\r\n\r\n    var datas = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n        datas.push({x: i, y: events[i].Album.ImageCount});\r\n    }\r\n    console.log(\"coucou\");\r\n\r\n    return (\r\n        <div className='charts'>\r\n            <div className='chart1'>\r\n                <XYPlot width={500} height={500} margin={70}>\r\n                    <HorizontalGridLines style={{stroke: '#B7E9ED'}} />\r\n                    <VerticalGridLines style={{stroke: '#B7E9ED'}} />\r\n                    <XAxis\r\n                        title=\"Numéro de l'évènement\"\r\n                        style={{\r\n                            line: {stroke: '#ADDDE1'},\r\n                            ticks: {stroke: '#ADDDE1'},\r\n                            text: {stroke: 'none', fill: '#ffffff', fontWeight: 600}\r\n                        }}\r\n                    />\r\n                    <YAxis title=\"Nombre de photos\" style={{text: {stroke: 'none', fill: '#ffffff', fontWeight: 600}}}/>\r\n                    <LineMarkSeries\r\n                        className=\"first-series\"\r\n                        data={datas}\r\n                        style={{\r\n                            strokeWidth: 0.01\r\n                        }}\r\n                    />\r\n                </XYPlot>\r\n            </div>\r\n            <div className='chart2'>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}