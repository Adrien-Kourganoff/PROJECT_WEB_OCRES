{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tara0\\\\OneDrive\\\\Bureau\\\\Travail\\\\Ing 4\\\\Techno web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\galerie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, VerticalRectSeries } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios');\n\nconst ONE_DAY = 86400000; // A card used to contain all data from api\n\nexport default function Graphs() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n\n  const fetchEvents = async () => {\n    await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\n  };\n\n  useEffect(() => {\n    fetchEvents(); //console.log( {events} );\n  }, []);\n  var datas = [];\n\n  for (let i = 0; i < events.length; i++) {\n    datas.push({\n      x: i,\n      y: events[i].Album.ImageCount\n    });\n  }\n\n  console.log(\"coucou\");\n  /**\r\n   * Same as precedent datas just added the real time to put them in the chart and order them\r\n   * Elements are stored like that \r\n   * \"LastUpdated\": \"2021-09-24 04:59:39\"\r\n   */\n\n  var datasTime = [];\n\n  for (let i = 0; i < events.length; i++) {\n    datasTime.push({\n      x0: new Date(events[i].Album.LastUpdated).getTime(),\n      x: new Date(events[i].Album.LastUpdated).getTime() + ONE_DAY,\n      y: events[i].Album.ImageCount\n    });\n  }\n\n  var xDomain = [-1, 3];\n  var yDomain = [-5, 15];\n  var xAxisOn0 = true;\n  var yAxisOn0 = true;\n  var verticalTickValues = [];\n  var horizontalTickValues = [0];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: [/*#__PURE__*/_jsxDEV(XYPlot, {\n      width: 500,\n      height: 500,\n      margin: 70,\n      xDomain,\n      yDomain,\n      children: [!verticalTickValues || verticalTickValues.length ? /*#__PURE__*/_jsxDEV(VerticalGridLines, {\n        tickValues: verticalTickValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this) : null, !horizontalTickValues || horizontalTickValues.length ? /*#__PURE__*/_jsxDEV(HorizontalGridLines, {\n        tickValues: horizontalTickValues\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this) : null, /*#__PURE__*/_jsxDEV(HorizontalGridLines, {\n        style: {\n          stroke: '#B7E9ED'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalGridLines, {\n        style: {\n          stroke: '#B7E9ED'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n        class: \"xaxis\",\n        on0: xAxisOn0,\n        title: \"Num\\xE9ro de l'\\xE9v\\xE8nement\",\n        style: {\n          fill: 'var(--text)',\n          line: {\n            stroke: '#ADDDE1'\n          },\n          ticks: {\n            stroke: '#ADDDE1'\n          },\n          text: {\n            stroke: 'none',\n            fill: 'var(--text)',\n            fontWeight: 600\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n        class: \"yaxis\",\n        on0: xAxisOn0,\n        title: \"Nombre de photos\",\n        style: {\n          fill: 'var(--text)',\n          text: {\n            stroke: 'none',\n            fill: 'var(--text)',\n            fontWeight: 600\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LineMarkSeries, {\n        className: \"first-series\",\n        data: datas,\n        color: \"yellow\",\n        style: {\n          strokeWidth: 2.5,\n          fill: 'red'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        events: events\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n      margin: 70,\n      xType: \"time\",\n      width: 1000,\n      height: 600,\n      children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(VerticalRectSeries, {\n        data: datasTime,\n        style: {\n          stroke: '#fffff'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphs, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = Graphs;\n\nfunction List(props) {\n  var list = [];\n\n  for (let i = 0; i < props.events.length; i++) {\n    list.push({\n      \"id\": i,\n      \"date\": props.events[i].Album.LastUpdated,\n      \"nom\": props.events[i].Album.Title,\n      \"nb\": props.events[i].Album.ImageCount\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"lieu\",\n        children: [\"N\\xB0\", event.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"date\",\n        children: [\"Date : \", event.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"nom\",\n        children: [\"Nom : \", event.nom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"photo\",\n        children: [\"Nb photos : \", event.nb]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n\n_c2 = List;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Graphs\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"sources":["C:/Users/tara0/OneDrive/Bureau/Travail/Ing 4/Techno web/PROJECT_WEB_OCRES/frontend/src/components/galerie.js"],"names":["React","useEffect","useState","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","LineMarkSeries","VerticalRectSeries","default","axios","require","ONE_DAY","Graphs","events","setEvents","fetchEvents","get","then","all","data","datas","i","length","push","x","y","Album","ImageCount","console","log","datasTime","x0","Date","LastUpdated","getTime","xDomain","yDomain","xAxisOn0","yAxisOn0","verticalTickValues","horizontalTickValues","stroke","fill","line","ticks","text","fontWeight","strokeWidth","List","props","list","Title","map","event","id","date","nom","nb"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineMarkSeries,\r\n  VerticalRectSeries,\r\n} from 'react-vis';\r\nconst { default: axios } = require('axios');\r\n\r\nconst ONE_DAY = 86400000;\r\n\r\n// A card used to contain all data from api\r\nexport default function Graphs(){\r\n\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const fetchEvents = async () => {\r\n        await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n        //console.log( {events} );\r\n    }, []);\r\n\r\n    var datas = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n        datas.push({x: i, y: events[i].Album.ImageCount});\r\n    }\r\n    console.log(\"coucou\");\r\n\r\n    /**\r\n     * Same as precedent datas just added the real time to put them in the chart and order them\r\n     * Elements are stored like that \r\n     * \"LastUpdated\": \"2021-09-24 04:59:39\"\r\n     */\r\n    var datasTime = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n        datasTime.push(\r\n            {\r\n                x0: new Date(events[i].Album.LastUpdated).getTime(), \r\n                x:  new Date(events[i].Album.LastUpdated).getTime() + ONE_DAY, \r\n                y:  events[i].Album.ImageCount\r\n            }\r\n        );\r\n    }\r\n\r\n       var xDomain = [-1, 3];\r\n       var yDomain = [-5, 15];\r\n       var  xAxisOn0 = true;\r\n        var yAxisOn0 = true;\r\n        var verticalTickValues = [];\r\n        var horizontalTickValues = [0];\r\n\r\n    return (\r\n        <div className='chart'>\r\n            <XYPlot width={500} height={500} margin={70}  {...{xDomain, yDomain}}>\r\n      {!verticalTickValues || verticalTickValues.length ? (\r\n        <VerticalGridLines tickValues={verticalTickValues} />\r\n      ) : null}\r\n      {!horizontalTickValues || horizontalTickValues.length ? (\r\n        <HorizontalGridLines tickValues={horizontalTickValues} />\r\n      ) : null}\r\n                <HorizontalGridLines style={{stroke: '#B7E9ED'}} />\r\n                <VerticalGridLines style={{stroke: '#B7E9ED'}} />\r\n                <XAxis class=\"xaxis\" on0={xAxisOn0}\r\n                    title=\"Numéro de l'évènement\"\r\n                    style={{\r\n                        fill: 'var(--text)',\r\n                        line: {stroke: '#ADDDE1'},\r\n                        ticks: {stroke: '#ADDDE1'},\r\n                        text: {stroke: 'none', fill: 'var(--text)', fontWeight: 600}\r\n                    }}\r\n                />\r\n                <YAxis class=\"yaxis\" on0={xAxisOn0} title=\"Nombre de photos\" style={{fill: 'var(--text)', text: {stroke: 'none', fill: 'var(--text)', fontWeight: 600}}}/>\r\n                <LineMarkSeries\r\n                    className=\"first-series\"\r\n                    data={datas}\r\n                    color='yellow'\r\n                    style={{\r\n                        strokeWidth: 2.5,\r\n                        fill: 'red'\r\n                    }}\r\n                />\r\n            </XYPlot>\r\n            <div className='list'>\r\n                <List events={events}/>\r\n            </div>\r\n            <XYPlot\r\n                margin={70}\r\n                xType=\"time\"\r\n                width={1000}\r\n                height={600}>\r\n                <VerticalGridLines />\r\n                <HorizontalGridLines />\r\n                <XAxis />\r\n                <YAxis />\r\n                <VerticalRectSeries data={datasTime} style={{stroke: '#fffff'}} />\r\n            </XYPlot>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction List(props){\r\n\r\n    var list = [];\r\n\r\n    for (let i = 0; i < props.events.length; i++) {\r\n        list.push({\r\n            \"id\":i,\r\n            \"date\": props.events[i].Album.LastUpdated,\r\n            \"nom\": props.events[i].Album.Title,\r\n            \"nb\": props.events[i].Album.ImageCount\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {list.map(event => (\r\n                <div className='event'>\r\n                    <h3 className='lieu'>N°{event.id}</h3>\r\n                    <h5 className='date'>Date : {event.date}</h5>\r\n                    <h5 className='nom'>Nom : {event.nom}</h5>\r\n                    <h5 className='photo'>Nb photos : {event.nb}</h5>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}