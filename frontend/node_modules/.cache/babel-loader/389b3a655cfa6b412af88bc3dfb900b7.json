{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n'use strict';\n\nconst _ = require('lodash');\n\nconst babylon = require('@babel/parser');\n\nconst baseOptions = require('./tsOptions');\n\nconst options = _.merge(baseOptions, {\n  plugins: ['jsx']\n});\n/**\r\n * Doesn't accept custom options because babylon should be used directly in\r\n * that case.\r\n */\n\n\nmodule.exports = function () {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    }\n\n  };\n};","map":{"version":3,"sources":["C:/Users/tara0/OneDrive/Bureau/Travail/Ing 4/Techno web/PROJECT_WEB_OCRES/frontend/node_modules/jscodeshift/parser/tsx.js"],"names":["_","require","babylon","baseOptions","options","merge","plugins","module","exports","parse","code"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,CAAC,GAAGC,OAAO,CAAC,QAAD,CAAjB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,eAAD,CAAvB;;AACA,MAAME,WAAW,GAAGF,OAAO,CAAC,aAAD,CAA3B;;AAEA,MAAMG,OAAO,GAAGJ,CAAC,CAACK,KAAF,CAAQF,WAAR,EAAqB;AAAEG,EAAAA,OAAO,EAAE,CAAC,KAAD;AAAX,CAArB,CAAhB;AAEA;AACA;AACA;AACA;;;AACAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,SAAO;AACLC,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,aAAOR,OAAO,CAACO,KAAR,CAAcC,IAAd,EAAoBN,OAApB,CAAP;AACD;;AAHI,GAAP;AAKD,CAND","sourcesContent":["\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nconst _ = require('lodash');\r\nconst babylon = require('@babel/parser');\r\nconst baseOptions = require('./tsOptions');\r\n\r\nconst options = _.merge(baseOptions, { plugins: ['jsx'] });\r\n\r\n/**\r\n * Doesn't accept custom options because babylon should be used directly in\r\n * that case.\r\n */\r\nmodule.exports = function() {\r\n  return {\r\n    parse(code) {\r\n      return babylon.parse(code, options);\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}