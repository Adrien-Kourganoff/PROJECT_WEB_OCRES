{"ast":null,"code":"/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\n'use strict';\n\nconst babylon = require('@babel/parser'); // These are the options that were the default of the Babel5 parse function\n// see https://github.com/babel/babel/blob/5.x/packages/babel/src/api/node.js#L81\n\n\nconst options = {\n  sourceType: 'module',\n  allowHashBang: true,\n  ecmaVersion: Infinity,\n  allowImportExportEverywhere: true,\n  allowReturnOutsideFunction: true,\n  startLine: 1,\n  tokens: true,\n  plugins: ['estree', 'jsx', 'asyncGenerators', 'classProperties', 'doExpressions', 'exportExtensions', 'functionBind', 'functionSent', 'objectRestSpread', 'dynamicImport', 'nullishCoalescingOperator', 'optionalChaining']\n};\n/**\r\n * Wrapper to set default options. Doesn't accept custom options because in that\r\n * case babylon should be used instead.\r\n */\n\nmodule.exports = function () {\n  return {\n    parse(code) {\n      return babylon.parse(code, options);\n    }\n\n  };\n};","map":{"version":3,"sources":["C:/Users/tara0/OneDrive/Bureau/Travail/Ing 4/Techno web/PROJECT_WEB_OCRES/frontend/node_modules/jscodeshift/parser/babel5Compat.js"],"names":["babylon","require","options","sourceType","allowHashBang","ecmaVersion","Infinity","allowImportExportEverywhere","allowReturnOutsideFunction","startLine","tokens","plugins","module","exports","parse","code"],"mappings":"AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAAvB,C,CAEA;AACA;;;AACA,MAAMC,OAAO,GAAG;AACdC,EAAAA,UAAU,EAAE,QADE;AAEdC,EAAAA,aAAa,EAAE,IAFD;AAGdC,EAAAA,WAAW,EAAEC,QAHC;AAIdC,EAAAA,2BAA2B,EAAE,IAJf;AAKdC,EAAAA,0BAA0B,EAAE,IALd;AAMdC,EAAAA,SAAS,EAAE,CANG;AAOdC,EAAAA,MAAM,EAAE,IAPM;AAQdC,EAAAA,OAAO,EAAE,CACP,QADO,EAEP,KAFO,EAGP,iBAHO,EAIP,iBAJO,EAKP,eALO,EAMP,kBANO,EAOP,cAPO,EAQP,cARO,EASP,kBATO,EAUP,eAVO,EAWP,2BAXO,EAYP,kBAZO;AARK,CAAhB;AAwBA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiB,YAAW;AAC1B,SAAO;AACLC,IAAAA,KAAK,CAACC,IAAD,EAAO;AACV,aAAOf,OAAO,CAACc,KAAR,CAAcC,IAAd,EAAoBb,OAApB,CAAP;AACD;;AAHI,GAAP;AAKD,CAND","sourcesContent":["\r\n/**\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n'use strict';\r\n\r\nconst babylon = require('@babel/parser');\r\n\r\n// These are the options that were the default of the Babel5 parse function\r\n// see https://github.com/babel/babel/blob/5.x/packages/babel/src/api/node.js#L81\r\nconst options = {\r\n  sourceType: 'module',\r\n  allowHashBang: true,\r\n  ecmaVersion: Infinity,\r\n  allowImportExportEverywhere: true,\r\n  allowReturnOutsideFunction: true,\r\n  startLine: 1,\r\n  tokens: true,\r\n  plugins: [\r\n    'estree',\r\n    'jsx',\r\n    'asyncGenerators',\r\n    'classProperties',\r\n    'doExpressions',\r\n    'exportExtensions',\r\n    'functionBind',\r\n    'functionSent',\r\n    'objectRestSpread',\r\n    'dynamicImport',\r\n    'nullishCoalescingOperator',\r\n    'optionalChaining',\r\n  ],\r\n};\r\n\r\n/**\r\n * Wrapper to set default options. Doesn't accept custom options because in that\r\n * case babylon should be used instead.\r\n */\r\nmodule.exports = function() {\r\n  return {\r\n    parse(code) {\r\n      return babylon.parse(code, options);\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"script"}