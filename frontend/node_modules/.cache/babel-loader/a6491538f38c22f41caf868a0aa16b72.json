{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\galerie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios'); // A card used to contain all data from api\n\n\nexport default function Graphs() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n  var chart = new Chartisi.Line('.ct-chart', {\n    labels: events,\n    series: {\n      events\n    }\n  }, {\n    low: 0\n  });\n\n  const fetchEvents = async () => {\n    await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\n  };\n\n  useEffect(() => {\n    fetchEvents();\n    console.log({\n      events\n    });\n  }, []); //Code from the documentation of chartist\n  // Let's put a sequence number aside so we can use it in the event callbacks\n\n  var seq = 0,\n      delays = 80,\n      durations = 500; // Once the chart is fully created we reset the sequence\n\n  chart.on('created', function () {\n    seq = 0;\n  }); // On each drawn element by Chartist we use the Chartist.Svg API to trigger SMIL animations\n\n  chart.on('draw', function (data) {\n    seq++;\n\n    if (data.type === 'line') {\n      // If the drawn element is a line we do a simple opacity fade in. This could also be achieved using CSS3 animations.\n      data.element.animate({\n        opacity: {\n          // The delay when we like to start the animation\n          begin: seq * delays + 1000,\n          // Duration of the animation\n          dur: durations,\n          // The value where the animation should start\n          from: 0,\n          // The value where it should end\n          to: 1\n        }\n      });\n    } else if (data.type === 'label' && data.axis === 'x') {\n      data.element.animate({\n        y: {\n          begin: seq * delays,\n          dur: durations,\n          from: data.y + 100,\n          to: data.y,\n          // We can specify an easing function from Chartist.Svg.Easing\n          easing: 'easeOutQuart'\n        }\n      });\n    } else if (data.type === 'label' && data.axis === 'y') {\n      data.element.animate({\n        x: {\n          begin: seq * delays,\n          dur: durations,\n          from: data.x - 100,\n          to: data.x,\n          easing: 'easeOutQuart'\n        }\n      });\n    } else if (data.type === 'point') {\n      data.element.animate({\n        x1: {\n          begin: seq * delays,\n          dur: durations,\n          from: data.x - 10,\n          to: data.x,\n          easing: 'easeOutQuart'\n        },\n        x2: {\n          begin: seq * delays,\n          dur: durations,\n          from: data.x - 10,\n          to: data.x,\n          easing: 'easeOutQuart'\n        },\n        opacity: {\n          begin: seq * delays,\n          dur: durations,\n          from: 0,\n          to: 1,\n          easing: 'easeOutQuart'\n        }\n      });\n    } else if (data.type === 'grid') {\n      // Using data.axis we get x or y which we can use to construct our animation definition objects\n      var pos1Animation = {\n        begin: seq * delays,\n        dur: durations,\n        from: data[data.axis.units.pos + '1'] - 30,\n        to: data[data.axis.units.pos + '1'],\n        easing: 'easeOutQuart'\n      };\n      var pos2Animation = {\n        begin: seq * delays,\n        dur: durations,\n        from: data[data.axis.units.pos + '2'] - 100,\n        to: data[data.axis.units.pos + '2'],\n        easing: 'easeOutQuart'\n      };\n      var animations = {};\n      animations[data.axis.units.pos + '1'] = pos1Animation;\n      animations[data.axis.units.pos + '2'] = pos2Animation;\n      animations['opacity'] = {\n        begin: seq * delays,\n        dur: durations,\n        from: 0,\n        to: 1,\n        easing: 'easeOutQuart'\n      };\n      data.element.animate(animations);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: chart\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphs, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = Graphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/galerie.js"],"names":["React","useEffect","useState","default","axios","require","Graphs","events","setEvents","chart","Chartisi","Line","labels","series","low","fetchEvents","get","then","all","data","console","log","seq","delays","durations","on","type","element","animate","opacity","begin","dur","from","to","axis","y","easing","x","x1","x2","pos1Animation","units","pos","pos2Animation","animations"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nconst { default: axios } = require('axios');\r\n\r\n// A card used to contain all data from api\r\nexport default function Graphs(){\r\n\r\n    const [events, setEvents] = useState([]);\r\n\r\n    var chart = new Chartisi.Line('.ct-chart', {\r\n        labels: events,\r\n        series: {events}\r\n    },{\r\n        low: 0\r\n    });\r\n\r\n    const fetchEvents = async () => {\r\n        await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n        console.log( {events} );\r\n    }, []);\r\n\r\n    //Code from the documentation of chartist\r\n    // Let's put a sequence number aside so we can use it in the event callbacks\r\n    var seq = 0,\r\n    delays = 80,\r\n    durations = 500;\r\n\r\n    // Once the chart is fully created we reset the sequence\r\n    chart.on('created', function() {\r\n    seq = 0;\r\n    });\r\n\r\n    // On each drawn element by Chartist we use the Chartist.Svg API to trigger SMIL animations\r\n    chart.on('draw', function(data) {\r\n        seq++;\r\n\r\n        if(data.type === 'line') {\r\n            // If the drawn element is a line we do a simple opacity fade in. This could also be achieved using CSS3 animations.\r\n            data.element.animate({\r\n            opacity: {\r\n                // The delay when we like to start the animation\r\n                begin: seq * delays + 1000,\r\n                // Duration of the animation\r\n                dur: durations,\r\n                // The value where the animation should start\r\n                from: 0,\r\n                // The value where it should end\r\n                to: 1\r\n            }\r\n            });\r\n        } else if(data.type === 'label' && data.axis === 'x') {\r\n            data.element.animate({\r\n            y: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: data.y + 100,\r\n                to: data.y,\r\n                // We can specify an easing function from Chartist.Svg.Easing\r\n                easing: 'easeOutQuart'\r\n            }\r\n            });\r\n        } else if(data.type === 'label' && data.axis === 'y') {\r\n            data.element.animate({\r\n            x: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: data.x - 100,\r\n                to: data.x,\r\n                easing: 'easeOutQuart'\r\n            }\r\n            });\r\n        } else if(data.type === 'point') {\r\n            data.element.animate({\r\n            x1: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: data.x - 10,\r\n                to: data.x,\r\n                easing: 'easeOutQuart'\r\n            },\r\n            x2: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: data.x - 10,\r\n                to: data.x,\r\n                easing: 'easeOutQuart'\r\n            },\r\n            opacity: {\r\n                begin: seq * delays,\r\n                dur: durations,\r\n                from: 0,\r\n                to: 1,\r\n                easing: 'easeOutQuart'\r\n            }\r\n            });\r\n        } else if(data.type === 'grid') {\r\n            // Using data.axis we get x or y which we can use to construct our animation definition objects\r\n            var pos1Animation = {\r\n            begin: seq * delays,\r\n            dur: durations,\r\n            from: data[data.axis.units.pos + '1'] - 30,\r\n            to: data[data.axis.units.pos + '1'],\r\n            easing: 'easeOutQuart'\r\n            };\r\n\r\n            var pos2Animation = {\r\n            begin: seq * delays,\r\n            dur: durations,\r\n            from: data[data.axis.units.pos + '2'] - 100,\r\n            to: data[data.axis.units.pos + '2'],\r\n            easing: 'easeOutQuart'\r\n            };\r\n\r\n            var animations = {};\r\n            animations[data.axis.units.pos + '1'] = pos1Animation;\r\n            animations[data.axis.units.pos + '2'] = pos2Animation;\r\n            animations['opacity'] = {\r\n            begin: seq * delays,\r\n            dur: durations,\r\n            from: 0,\r\n            to: 1,\r\n            easing: 'easeOutQuart'\r\n            };\r\n\r\n            data.element.animate(animations);\r\n        }\r\n    });\r\n\r\n    return (\r\n        <div className='chart'>\r\n            {chart}\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}