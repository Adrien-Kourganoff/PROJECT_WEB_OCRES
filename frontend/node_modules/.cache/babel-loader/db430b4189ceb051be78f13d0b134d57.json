{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\nextWorker.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _ = require('lodash'); //Give the next workers for the next 3 events or less if less programmed\n\n\nexport default function NextWorker() {\n  _s();\n\n  var actual = -1;\n  const [data, setData] = useState([{\n    \"event\": \"Pot des caves\",\n    \"position\": {\n      \"name\": \"Duplex\",\n      \"lat\": 48.873658,\n      \"lng\": 2.292500\n    },\n    \"couvreurs\": [\"Emma\", \" Tara\"]\n  }, {\n    \"event\": \"JOB\",\n    \"position\": {\n      \"name\": \"Palais royal\",\n      \"lat\": 48.865045,\n      \"lng\": 2.337404\n    },\n    \"couvreurs\": [\"Eloi\", \" Thomas\"]\n  }, {\n    \"event\": \"Afterwork JEECE\",\n    \"position\": {\n      \"name\": \"Square St Eloi\",\n      \"lat\": 48.844737,\n      \"lng\": 2.387503\n    },\n    \"couvreurs\": [\"Nina\", \" Mathieux\"]\n  }]);\n\n  const createEventList = () => {\n    actual = actual + 1;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"eventTitle\",\n        children: data[actual].event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"couvreurs\",\n        children: [\"Couvert par : \", data[actual]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"position\",\n        children: [\"Lieu : \", data[actual].position.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this);\n  };\n\n  const createList = () => {\n    return data.map(createEventList());\n  };\n\n  var eventList = [];\n  var eventListCode;\n  useEffect(() => {\n    eventList = [...Array(3)].map((e, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"eventTitle\",\n        children: data[i].event\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"couvreurs\",\n        children: [\"Couvert par : \", data[i].couvreurs]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"position\",\n        children: [\"Lieu : \", data[i].position.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 49\n    }, this));\n    console.log(eventList[0]);\n    console.log(eventList);\n    eventListCode = JSON.stringify(eventList);\n    console.log(eventListCode);\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"eventList\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(NextWorker, \"pGMQJkiY4r1dintYmx/7gZyLHJk=\");\n\n_c = NextWorker;\n\nvar _c;\n\n$RefreshReg$(_c, \"NextWorker\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/nextWorker.js"],"names":["React","useState","useEffect","_","require","NextWorker","actual","data","setData","createEventList","event","position","name","createList","map","eventList","eventListCode","Array","e","i","couvreurs","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nvar _ = require('lodash');\r\n\r\n//Give the next workers for the next 3 events or less if less programmed\r\nexport default function NextWorker(){\r\n\r\n    var actual = -1;\r\n\r\n    const [data, setData] = useState([\r\n        {\"event\":\"Pot des caves\",\"position\":{ \"name\":\"Duplex\", \"lat\":48.873658, \"lng\": 2.292500 },\"couvreurs\":[\"Emma\",\" Tara\"]},\r\n        {\"event\":\"JOB\",\"position\":{ \"name\":\"Palais royal\", \"lat\":48.865045, \"lng\": 2.337404 },\"couvreurs\":[\"Eloi\",\" Thomas\"]},\r\n        {\"event\":\"Afterwork JEECE\",\"position\":{ \"name\":\"Square St Eloi\", \"lat\":48.844737, \"lng\": 2.387503 },\"couvreurs\":[\"Nina\",\" Mathieux\"]}\r\n    ]);\r\n\r\n    const createEventList = () => {\r\n        actual = actual +1;\r\n        return(\r\n            <div className='event'>\r\n                <h1 className='eventTitle'>{data[actual].event}</h1>\r\n                <h5 className='couvreurs'>Couvert par : {data[actual]}</h5>\r\n                <h5 className='position'>Lieu : {data[actual].position.name}</h5>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const createList = () => {\r\n        return data.map(createEventList());\r\n    }\r\n\r\n    var eventList = [];\r\n    var eventListCode;\r\n\r\n    useEffect(() => {\r\n        eventList = [...Array(3)].map((e, i) => <div className='event'>\r\n        <h1 className='eventTitle'>{data[i].event}</h1>\r\n        <h5 className='couvreurs'>Couvert par : {data[i].couvreurs}</h5>\r\n        <h5 className='position'>Lieu : {data[i].position.name}</h5>\r\n    </div>)\r\n            console.log(eventList[0]);\r\n        console.log(eventList);\r\n        eventListCode = (JSON).stringify(eventList);\r\n        console.log(eventListCode);\r\n    }, [data]);\r\n\r\n    return (\r\n\r\n        <div className='container'>\r\n            <eventList/>\r\n        </div>\r\n\r\n    );\r\n    \r\n\r\n}"]},"metadata":{},"sourceType":"module"}