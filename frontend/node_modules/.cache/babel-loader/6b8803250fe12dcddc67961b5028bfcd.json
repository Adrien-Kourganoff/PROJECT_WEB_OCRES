{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\galerie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ChartistGraph from 'react-chartist';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios'); // A card used to contain all data from api\n\n\nexport default function Graphs() {\n  _s();\n\n  const [events, setEvents] = useState([]);\n\n  const fetchEvents = async () => {\n    await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\n  };\n\n  useEffect(() => {\n    fetchEvents();\n    console.log({\n      events\n    });\n  }, []);\n  var data = {\n    labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\n    series: [[1, 2, 4, 8, 6, -2, -1, -4, -6, -2]]\n  };\n  var options = {\n    high: 10,\n    low: -10,\n    axisX: {\n      labelInterpolationFnc: function (value, index) {\n        return index % 2 === 0 ? value : null;\n      }\n    }\n  };\n  var type = 'Bar';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: /*#__PURE__*/_jsxDEV(ChartistGraph, {\n      data: data,\n      options: options,\n      type: type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Graphs, \"j18ueuia/psAZ/XawE3UyqzOWsE=\");\n\n_c = Graphs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Graphs\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/galerie.js"],"names":["React","useEffect","useState","ChartistGraph","default","axios","require","Graphs","events","setEvents","fetchEvents","get","then","all","data","console","log","labels","series","options","high","low","axisX","labelInterpolationFnc","value","index","type"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,aAAP,MAA0B,gBAA1B;;;AACA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAAqBC,OAAO,CAAC,OAAD,CAAlC,C,CAGA;;;AACA,eAAe,SAASC,MAAT,GAAiB;AAAA;;AAE5B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMQ,WAAW,GAAG,YAAY;AAC5B,UAAML,KAAK,CAACM,GAAN,CAAU,8BAAV,EAA0CC,IAA1C,CAA+CC,GAAG,IAAIJ,SAAS,CAACI,GAAG,CAACC,IAAL,CAA/D,CAAN;AACH,GAFD;;AAIAb,EAAAA,SAAS,CAAC,MAAM;AACZS,IAAAA,WAAW;AACXK,IAAAA,OAAO,CAACC,GAAR,CAAa;AAACR,MAAAA;AAAD,KAAb;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,MAAIM,IAAI,GAAG;AACPG,IAAAA,MAAM,EAAE,CAAC,IAAD,EAAO,IAAP,EAAa,IAAb,EAAmB,IAAnB,EAAyB,IAAzB,EAA+B,IAA/B,EAAqC,IAArC,EAA2C,IAA3C,EAAiD,IAAjD,EAAuD,KAAvD,CADD;AAEPC,IAAAA,MAAM,EAAE,CACN,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAC,CAAjB,EAAoB,CAAC,CAArB,EAAwB,CAAC,CAAzB,EAA4B,CAAC,CAA7B,EAAgC,CAAC,CAAjC,CADM;AAFD,GAAX;AAOE,MAAIC,OAAO,GAAG;AACZC,IAAAA,IAAI,EAAE,EADM;AAEZC,IAAAA,GAAG,EAAE,CAAC,EAFM;AAGZC,IAAAA,KAAK,EAAE;AACLC,MAAAA,qBAAqB,EAAE,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC5C,eAAOA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkBD,KAAlB,GAA0B,IAAjC;AACD;AAHI;AAHK,GAAd;AAUA,MAAIE,IAAI,GAAG,KAAX;AAEF,sBACI;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,2BACI,QAAC,aAAD;AAAe,MAAA,IAAI,EAAEZ,IAArB;AAA2B,MAAA,OAAO,EAAEK,OAApC;AAA6C,MAAA,IAAI,EAAEO;AAAnD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAtCuBnB,M;;KAAAA,M","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport ChartistGraph from 'react-chartist';\r\nconst { default: axios } = require('axios');\r\n\r\n\r\n// A card used to contain all data from api\r\nexport default function Graphs(){\r\n\r\n    const [events, setEvents] = useState([]);\r\n\r\n    const fetchEvents = async () => {\r\n        await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchEvents();\r\n        console.log( {events} );\r\n    }, []);\r\n\r\n    var data = {\r\n        labels: ['W1', 'W2', 'W3', 'W4', 'W5', 'W6', 'W7', 'W8', 'W9', 'W10'],\r\n        series: [\r\n          [1, 2, 4, 8, 6, -2, -1, -4, -6, -2]\r\n        ]\r\n      };\r\n  \r\n      var options = {\r\n        high: 10,\r\n        low: -10,\r\n        axisX: {\r\n          labelInterpolationFnc: function(value, index) {\r\n            return index % 2 === 0 ? value : null;\r\n          }\r\n        }\r\n      };\r\n    \r\n      var type = 'Bar'\r\n\r\n    return (\r\n        <div className='chart'>\r\n            <ChartistGraph data={data} options={options} type={type} />\r\n        </div>\r\n    )\r\n\r\n}"]},"metadata":{},"sourceType":"module"}