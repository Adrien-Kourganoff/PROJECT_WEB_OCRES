{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tara0\\\\OneDrive\\\\Bureau\\\\Travail\\\\Ing 4\\\\Techno web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\events.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport \"../styles/table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios');\n\nlet value = null;\nlet oldValue = null;\nvar yes = false;\nvar password = false; // A card used to contain all data from api\n\nexport default function EventListTable() {\n  _s();\n\n  const [dat, setDat] = useState([]);\n\n  const fetchDat = async () => {\n    //console.log(\"coucou2\")\n    await axios.get('http://localhost:9000/albums').then(all => {\n      //console.log(\"coucou4\")\n      //console.log(all.data[0])\n      const tab = [];\n\n      for (let i = 0; i < all.data.length; i++) {\n        const actual = {\n          Title: all.data[i].Album.Title,\n          ImageCount: all.data[i].Album.ImageCount,\n          LastUpdated: all.data[i].Album.LastUpdated,\n          Public: JSON.stringify(all.data[i].Album.Public),\n          URL: ClickLink(all.data[i].Album.URL)\n        };\n        tab.push(actual); //console.log(actual)\n      }\n\n      setDat(tab);\n    }); //console.log(\"coucou3\")\n  };\n\n  useEffect(() => {\n    //console.log(\"coucou\")\n    fetchDat(); //console.log( {dat} );\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Titre',\n    accessor: 'Title'\n  }, {\n    Header: 'Nombre Images',\n    accessor: 'ImageCount'\n  }, {\n    Header: 'DerniÃ¨re modification',\n    accessor: 'LastUpdated'\n  }, {\n    Header: 'Accessible',\n    accessor: 'Public'\n  }, {\n    Header: 'Lien',\n    accessor: 'URL'\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PopUp, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      className: \"tableInside\",\n      columns: columns,\n      data: dat\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EventListTable, \"tQ8uXuj0bpLOWhdq909dntgvR70=\");\n\n_c = EventListTable;\n\nfunction ClickLink(params) {\n  return /*#__PURE__*/_jsxDEV(\"td\", {\n    contentEditable: \"false\",\n    className: \"lien\",\n    onClick: () => window.open(params, \"_blank\"),\n    children: \"Cliquer ici pour acceder\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 12\n  }, this);\n}\n\n_c2 = ClickLink;\n\nfunction PopUp(params, dvalue) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"pop-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"content\",\n      children: \" Do you Really want to change 1 by 2 ? \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => sendData(),\n        children: \" Yes \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleChange(-1, -1),\n        children: \" No \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n\n_c3 = PopUp;\n\nfunction sendData() {\n  if (password == false) {\n    console.log(\"database: \" + oldValue + \" nouvelle: \" + value); //on se connecte Ã  la db\n    //on trouve lelement qui correspond Ã  oldValue,\n    //Si on trouve on demande un mot de passe => on modifie la valeur dans la db\n\n    var data = \"Enter Password:<br></br><input id='password' type='password' placeholder='Password'>\";\n    document.getElementById(\"content\").innerHTML = data;\n    password = true;\n  } else {\n    console.log(document.getElementById(\"password\").value);\n    password = false;\n    let popUp = document.getElementById(\"pop-up\");\n    popUp.style.display = \"none\";\n    yes = false;\n  }\n}\n\nfunction handleChange(params, dvalue) {\n  if (params != dvalue && dvalue != null && yes == false) {\n    console.log(\"on rentre dans la boucle \" + params + \" \" + dvalue); //return <div className=\"pop-up\">Do you Really want to change ${dvalue} by ${params} ? </div>\n\n    let popUp = document.getElementById(\"pop-up\");\n\n    if (popUp.style.display != \"flex\") {\n      popUp.style.display = \"flex\";\n      console.log(\"on affiche\");\n    }\n    /*else{\r\n      popUp.style.display = \"none\";\r\n      console.log(\"----------- on ferme ? --------- \");\r\n    }*/\n\n\n    document.getElementById(\"content\").innerHTML = \"Do you Really want to change \" + dvalue + \" by \" + params + \" ?\";\n    oldValue = dvalue;\n    value = params;\n    yes = true;\n    console.log(\"dans la fonction old: \" + oldValue + \" / nouv: \" + value); // PROBLEME SI ON MODIFIE UNE DATE\n  } else if (params == -1) {\n    console.log(\"on ferme\");\n    let popUp = document.getElementById(\"pop-up\");\n    popUp.style.display = \"none\";\n    yes = false;\n  }\n} //Code taken from the exemple presentation for react-table\n\n\nfunction Table(_ref) {\n  _s2();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  let lol = null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return (\n                /*#__PURE__*/\n                //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n                _jsxDEV(\"td\", { ...cell.getCellProps(),\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    contentEditable: true,\n                    onClick: truc => lol = truc.target.textContent,\n                    onBlur: truc => handleChange(truc.target.textContent, lol),\n                    children: [cell.render('Cell'), \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 25\n                }, this) //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\n\n              );\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n  return [useTable];\n});\n\n_c4 = Table;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"EventListTable\");\n$RefreshReg$(_c2, \"ClickLink\");\n$RefreshReg$(_c3, \"PopUp\");\n$RefreshReg$(_c4, \"Table\");","map":{"version":3,"sources":["C:/Users/tara0/OneDrive/Bureau/Travail/Ing 4/Techno web/PROJECT_WEB_OCRES/frontend/src/components/events.js"],"names":["React","useEffect","useState","useTable","useSortBy","default","axios","require","value","oldValue","yes","password","EventListTable","dat","setDat","fetchDat","get","then","all","tab","i","data","length","actual","Title","Album","ImageCount","LastUpdated","Public","JSON","stringify","URL","ClickLink","push","columns","useMemo","Header","accessor","params","window","open","PopUp","dvalue","sendData","handleChange","console","log","document","getElementById","innerHTML","popUp","style","display","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","lol","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","getRowProps","cells","cell","getCellProps","truc","target","textContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport \"../styles/table.css\";\r\nconst { default: axios } = require('axios');\r\nlet value=null;\r\nlet oldValue=null;\r\nvar yes=false;\r\nvar password=false;\r\n\r\n// A card used to contain all data from api\r\nexport default function EventListTable(){\r\n\r\n    const [dat, setDat] = useState([]);\r\n\r\n    \r\n\r\n    const fetchDat = async () => {\r\n        //console.log(\"coucou2\")\r\n        await axios.get('http://localhost:9000/albums').then(all => \r\n                {\r\n                    //console.log(\"coucou4\")\r\n                    //console.log(all.data[0])\r\n                    const tab = []\r\n                    for (let i = 0; i < all.data.length; i++) {\r\n                        const actual = \r\n                        {\r\n                            Title: all.data[i].Album.Title,\r\n                            ImageCount: all.data[i].Album.ImageCount,\r\n                            LastUpdated: all.data[i].Album.LastUpdated,\r\n                            Public: JSON.stringify(all.data[i].Album.Public),\r\n                            URL: ClickLink(all.data[i].Album.URL)\r\n                        };\r\n                        tab.push(actual)\r\n                        //console.log(actual)\r\n                    }\r\n                    setDat(tab);\r\n                }\r\n            );\r\n            //console.log(\"coucou3\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        //console.log(\"coucou\")\r\n        fetchDat();\r\n        \r\n        //console.log( {dat} );\r\n    }, []);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Titre',\r\n                accessor: 'Title'\r\n            },\r\n            {\r\n                Header: 'Nombre Images',\r\n                accessor: 'ImageCount'\r\n            },\r\n            {\r\n                Header: 'DerniÃ¨re modification',\r\n                accessor: 'LastUpdated'\r\n            },\r\n            {\r\n                Header: 'Accessible',\r\n                accessor: 'Public'\r\n            },\r\n            {\r\n                Header: 'Lien',\r\n                accessor: 'URL'\r\n            },\r\n        ]\r\n    );\r\n\r\n\r\n    return (\r\n      <>\r\n        <PopUp />\r\n        <Table className='tableInside' columns={columns} data={dat} />\r\n      </>\r\n    );\r\n}\r\n\r\nfunction ClickLink(params){\r\n    return <td contentEditable=\"false\" className=\"lien\" onClick={()=> window.open(params, \"_blank\")}>Cliquer ici pour acceder</td>;\r\n}\r\n\r\nfunction PopUp(params, dvalue){\r\n  return(\r\n    <div id=\"pop-up\"> \r\n      <div id=\"content\"> Do you Really want to change 1 by 2 ? </div>\r\n      <div className=\"buttons\">\r\n        <button onClick={() => sendData()}> Yes </button>\r\n        <button onClick={() => handleChange(-1,-1)}> No </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction sendData(){\r\n  if(password==false){\r\n    console.log(\"database: \" + oldValue + \" nouvelle: \" + value);\r\n    //on se connecte Ã  la db\r\n    //on trouve lelement qui correspond Ã  oldValue,\r\n    //Si on trouve on demande un mot de passe => on modifie la valeur dans la db\r\n    var data=\"Enter Password:<br></br><input id='password' type='password' placeholder='Password'>\";\r\n    document.getElementById(\"content\").innerHTML = data;\r\n    password=true;\r\n  }\r\n  else{\r\n    console.log(document.getElementById(\"password\").value);\r\n    password=false;\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    popUp.style.display = \"none\";\r\n    yes=false;\r\n  }\r\n  \r\n}\r\n\r\nfunction handleChange(params, dvalue){\r\n  if(params!=dvalue && dvalue!=null && yes==false){\r\n    console.log(\"on rentre dans la boucle \" + params + \" \" + dvalue);\r\n    //return <div className=\"pop-up\">Do you Really want to change ${dvalue} by ${params} ? </div>\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    if(popUp.style.display!=\"flex\"){\r\n      popUp.style.display = \"flex\";\r\n      console.log(\"on affiche\");\r\n    }\r\n      \r\n    /*else{\r\n      popUp.style.display = \"none\";\r\n      console.log(\"----------- on ferme ? --------- \");\r\n    }*/\r\n      \r\n      document.getElementById(\"content\").innerHTML = \"Do you Really want to change \" + dvalue + \" by \" + params + \" ?\";\r\n      oldValue=dvalue;\r\n      value=params;\r\n      yes=true;\r\n      console.log(\"dans la fonction old: \" + oldValue + \" / nouv: \" + value );\r\n      // PROBLEME SI ON MODIFIE UNE DATE\r\n  }\r\n  else if(params==-1){\r\n    console.log(\"on ferme\");\r\n    let popUp = document.getElementById(\"pop-up\");\r\n    popUp.style.display = \"none\";\r\n    yes=false;\r\n  }\r\n  \r\n}\r\n\r\n//Code taken from the exemple presentation for react-table\r\nfunction Table({ columns, data }) {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useSortBy\r\n    )\r\n\r\n    let lol=null;\r\n  \r\n    return (\r\n      <>\r\n        <table  {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span >\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' ðŸ”½'\r\n                          : ' ðŸ”¼'\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map(\r\n              (row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        //<td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                        <td {...cell.getCellProps()}>\r\n                          <div contentEditable onClick={(truc) => lol=truc.target.textContent} onBlur={(truc)=> handleChange(truc.target.textContent,lol)}>{cell.render('Cell')} </div>\r\n                        </td>\r\n                        //<input type=\"text\" className=\"edit\" defaultValue={cell.value} onBlur={(truc)=> console.log(truc.target.value)} />\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )}\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n      </>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}