{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\events.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useTable, useSortBy } from 'react-table';\nimport \"../styles/table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios'); // A card used to contain all data from api\n\n\nexport default function EventListTable() {\n  _s();\n\n  const [dat, setDat] = useState([]);\n\n  const fetchDat = async () => {\n    console.log(\"coucou2\");\n    await axios.get('http://localhost:9000/albums').then(all => {\n      console.log(\"coucou4\");\n      const actual = [{\n        Title: all.data.Album.Title,\n        ImageCount: all.data.Album.ImageCount,\n        LastUpdate: all.data.Album.LastUpdate,\n        Public: all.data.Album.Public,\n        URL: all.data.Album.URL\n      }];\n      console.log(actual);\n      setDat(actual[0]);\n    });\n    console.log(\"coucou3\");\n  };\n\n  useEffect(() => {\n    console.log(\"coucou\");\n    fetchDat();\n    console.log({\n      dat\n    });\n  }, []);\n  const columns = React.useMemo(() => [{\n    Header: 'Titre',\n    accessor: 'Title'\n  }, {\n    Header: 'Nombre Images',\n    accessor: 'ImageCount'\n  }, {\n    Header: 'DerniÃ¨re modification',\n    accessor: 'LastUpdate'\n  }, {\n    Header: 'Accessible',\n    accessor: 'Public'\n  }, {\n    Header: 'Lien',\n    accessor: 'URL'\n  }]);\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    data: dat\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n} //Code taken from the exemple presentation for react-table\n\n_s(EventListTable, \"tQ8uXuj0bpLOWhdq909dntgvR70=\");\n\n_c = EventListTable;\n\nfunction Table(_ref) {\n  _s2();\n\n  let {\n    columns,\n    data\n  } = _ref;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable({\n    columns,\n    data\n  }, useSortBy);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", { ...getTableProps(),\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: headerGroups.map(headerGroup => /*#__PURE__*/_jsxDEV(\"tr\", { ...headerGroup.getHeaderGroupProps(),\n          children: headerGroup.headers.map(column =>\n          /*#__PURE__*/\n          // Add the sorting props to control sorting. For this example\n          // we can add them into the header props\n          _jsxDEV(\"th\", { ...column.getHeaderProps(column.getSortByToggleProps()),\n            children: [column.render('Header'), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: column.isSorted ? column.isSortedDesc ? ' ðŸ”½' : ' ðŸ”¼' : ''\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", { ...getTableBodyProps(),\n        children: rows.map((row, i) => {\n          prepareRow(row);\n          return /*#__PURE__*/_jsxDEV(\"tr\", { ...row.getRowProps(),\n            children: row.cells.map(cell => {\n              return /*#__PURE__*/_jsxDEV(\"td\", { ...cell.getCellProps(),\n                children: cell.render('Cell')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s2(Table, \"OJj1dHRwcT5lX75qp47EC5rQD0M=\", false, function () {\n  return [useTable];\n});\n\n_c2 = Table;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"EventListTable\");\n$RefreshReg$(_c2, \"Table\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/events.js"],"names":["React","useEffect","useState","useTable","useSortBy","default","axios","require","EventListTable","dat","setDat","fetchDat","console","log","get","then","all","actual","Title","data","Album","ImageCount","LastUpdate","Public","URL","columns","useMemo","Header","accessor","Table","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport \"../styles/table.css\";\r\nconst { default: axios } = require('axios');\r\n\r\n// A card used to contain all data from api\r\nexport default function EventListTable(){\r\n\r\n    const [dat, setDat] = useState([]);\r\n\r\n    const fetchDat = async () => {\r\n        console.log(\"coucou2\")\r\n        await axios.get('http://localhost:9000/albums').then(all => \r\n                {\r\n                    console.log(\"coucou4\")\r\n                    const actual = \r\n                    [{\r\n                        Title: all.data.Album.Title,\r\n                        ImageCount: all.data.Album.ImageCount,\r\n                        LastUpdate: all.data.Album.LastUpdate,\r\n                        Public: all.data.Album.Public,\r\n                        URL: all.data.Album.URL\r\n                    }];\r\n                    console.log(actual);\r\n                    setDat(actual[0]);\r\n                }\r\n            );\r\n            console.log(\"coucou3\")\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"coucou\")\r\n        fetchDat();\r\n        \r\n        console.log( {dat} );\r\n    }, []);\r\n\r\n    const columns = React.useMemo(\r\n        () => [\r\n            {\r\n                Header: 'Titre',\r\n                accessor: 'Title'\r\n            },\r\n            {\r\n                Header: 'Nombre Images',\r\n                accessor: 'ImageCount'\r\n            },\r\n            {\r\n                Header: 'DerniÃ¨re modification',\r\n                accessor: 'LastUpdate'\r\n            },\r\n            {\r\n                Header: 'Accessible',\r\n                accessor: 'Public'\r\n            },\r\n            {\r\n                Header: 'Lien',\r\n                accessor: 'URL'\r\n            },\r\n        ]\r\n    );\r\n\r\n\r\n\r\n    return (\r\n        <Table columns={columns} data={dat} />\r\n    );\r\n}\r\n\r\n//Code taken from the exemple presentation for react-table\r\nfunction Table({ columns, data }) {\r\n    const {\r\n      getTableProps,\r\n      getTableBodyProps,\r\n      headerGroups,\r\n      rows,\r\n      prepareRow,\r\n    } = useTable(\r\n      {\r\n        columns,\r\n        data,\r\n      },\r\n      useSortBy\r\n    )\r\n  \r\n    return (\r\n      <>\r\n        <table {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  // Add the sorting props to control sorting. For this example\r\n                  // we can add them into the header props\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    {column.render('Header')}\r\n                    {/* Add a sort direction indicator */}\r\n                    <span>\r\n                      {column.isSorted\r\n                        ? column.isSortedDesc\r\n                          ? ' ðŸ”½'\r\n                          : ' ðŸ”¼'\r\n                        : ''}\r\n                    </span>\r\n                  </th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map(\r\n              (row, i) => {\r\n                prepareRow(row);\r\n                return (\r\n                  <tr {...row.getRowProps()}>\r\n                    {row.cells.map(cell => {\r\n                      return (\r\n                        <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                      )\r\n                    })}\r\n                  </tr>\r\n                )}\r\n            )}\r\n          </tbody>\r\n        </table>\r\n        <br />\r\n      </>\r\n    )\r\n  }"]},"metadata":{},"sourceType":"module"}