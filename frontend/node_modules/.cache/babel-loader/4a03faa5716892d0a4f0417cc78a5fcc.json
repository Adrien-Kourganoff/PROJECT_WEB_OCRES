{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\treto\\\\OneDrive\\\\Documents\\\\ING 4\\\\WEB\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\card.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios'); // A card used to contain all data from api\n\n\nexport default function CardWeather() {\n  _s();\n\n  const [data, setData] = useState({\n    \"city\": {\n      \"id\": 2988507,\n      \"name\": \"Paris\",\n      \"coord\": {\n        \"lon\": 2.3488,\n        \"lat\": 48.8534\n      },\n      \"country\": \"FR\",\n      \"population\": 2138551,\n      \"timezone\": 3600\n    },\n    \"cod\": \"200\",\n    \"message\": 3.6684273,\n    \"cnt\": 3,\n    \"list\": [{\n      \"dt\": 1638270000,\n      \"sunrise\": 1638256899,\n      \"sunset\": 1638287841,\n      \"temp\": {\n        \"day\": 7.41,\n        \"min\": 1.79,\n        \"max\": 9.68,\n        \"night\": 8.7,\n        \"eve\": 9.68,\n        \"morn\": 4.83\n      },\n      \"feels_like\": {\n        \"day\": 3.85,\n        \"night\": 5.4,\n        \"eve\": 6.89,\n        \"morn\": 0.87\n      },\n      \"pressure\": 1018,\n      \"humidity\": 83,\n      \"weather\": [{\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n      }],\n      \"speed\": 6.58,\n      \"deg\": 224,\n      \"gust\": 15.47,\n      \"clouds\": 100,\n      \"pop\": 0.2,\n      \"rain\": 0.22\n    }, {\n      \"dt\": 1638356400,\n      \"sunrise\": 1638343377,\n      \"sunset\": 1638374208,\n      \"temp\": {\n        \"day\": 10.38,\n        \"min\": 6.79,\n        \"max\": 10.67,\n        \"night\": 6.79,\n        \"eve\": 8.36,\n        \"morn\": 8.95\n      },\n      \"feels_like\": {\n        \"day\": 9.43,\n        \"night\": 3.96,\n        \"eve\": 5.79,\n        \"morn\": 5.26\n      },\n      \"pressure\": 1002,\n      \"humidity\": 75,\n      \"weather\": [{\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n      }],\n      \"speed\": 8.17,\n      \"deg\": 223,\n      \"gust\": 17.45,\n      \"clouds\": 100,\n      \"pop\": 1,\n      \"rain\": 2.72\n    }, {\n      \"dt\": 1638442800,\n      \"sunrise\": 1638429852,\n      \"sunset\": 1638460578,\n      \"temp\": {\n        \"day\": 6.47,\n        \"min\": 2.77,\n        \"max\": 6.47,\n        \"night\": 2.77,\n        \"eve\": 2.99,\n        \"morn\": 4.48\n      },\n      \"feels_like\": {\n        \"day\": 3.48,\n        \"night\": 0.68,\n        \"eve\": -0.62,\n        \"morn\": 1.33\n      },\n      \"pressure\": 1009,\n      \"humidity\": 57,\n      \"weather\": [{\n        \"id\": 500,\n        \"main\": \"Rain\",\n        \"description\": \"light rain\",\n        \"icon\": \"10d\"\n      }],\n      \"speed\": 4.36,\n      \"deg\": 303,\n      \"gust\": 9.25,\n      \"clouds\": 30,\n      \"pop\": 0.99,\n      \"rain\": 2.35\n    }]\n  });\n  const [icons, setIcons] = useState([]);\n\n  const fetchData = async () => {\n    await axios.get('http://localhost:9000/weather?day=3').then(all => setData(all.data));\n    await axios.get('http://localhost:9000/weather/icon?day=3').then(all => setIcons(all.data));\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n  console.log({\n    data\n  });\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"cont_meteo\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"today\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Today\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meteo_data\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: icons[0],\n          className: \"icon\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"temp\",\n          children: data.list[0].temp.day\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tomorrow\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Next days\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"forecast\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tmr\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icons[1],\n            className: \"icon\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"temp\",\n            children: data.list[1].temp.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tmr2\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: icons[2],\n            className: \"icon\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"temp\",\n            children: data.list[2].temp.day\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CardWeather, \"n+ol2BeJj0S87K6yIK+nIiFKLik=\");\n\n_c = CardWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CardWeather\");","map":{"version":3,"sources":["C:/Users/treto/OneDrive/Documents/ING 4/WEB/PROJECT_WEB_OCRES/frontend/src/components/card.js"],"names":["React","useEffect","useState","default","axios","require","CardWeather","data","setData","icons","setIcons","fetchData","get","then","all","console","log","list","temp","day"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AACA,MAAM;AAAEC,EAAAA,OAAO,EAAEC;AAAX,IAAqBC,OAAO,CAAC,OAAD,CAAlC,C,CAEA;;;AACA,eAAe,SAASC,WAAT,GAAsB;AAAA;;AAEjC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC;AAC7B,YAAQ;AACJ,YAAM,OADF;AAEJ,cAAQ,OAFJ;AAGJ,eAAS;AACL,eAAO,MADF;AAEL,eAAO;AAFF,OAHL;AAOJ,iBAAW,IAPP;AAQJ,oBAAc,OARV;AASJ,kBAAY;AATR,KADqB;AAY7B,WAAO,KAZsB;AAa7B,eAAW,SAbkB;AAc7B,WAAO,CAdsB;AAe7B,YAAQ,CACJ;AACI,YAAM,UADV;AAEI,iBAAW,UAFf;AAGI,gBAAU,UAHd;AAII,cAAQ;AACJ,eAAO,IADH;AAEJ,eAAO,IAFH;AAGJ,eAAO,IAHH;AAIJ,iBAAS,GAJL;AAKJ,eAAO,IALH;AAMJ,gBAAQ;AANJ,OAJZ;AAYI,oBAAc;AACV,eAAO,IADG;AAEV,iBAAS,GAFC;AAGV,eAAO,IAHG;AAIV,gBAAQ;AAJE,OAZlB;AAkBI,kBAAY,IAlBhB;AAmBI,kBAAY,EAnBhB;AAoBI,iBAAW,CACP;AACI,cAAM,GADV;AAEI,gBAAQ,MAFZ;AAGI,uBAAe,YAHnB;AAII,gBAAQ;AAJZ,OADO,CApBf;AA4BI,eAAS,IA5Bb;AA6BI,aAAO,GA7BX;AA8BI,cAAQ,KA9BZ;AA+BI,gBAAU,GA/Bd;AAgCI,aAAO,GAhCX;AAiCI,cAAQ;AAjCZ,KADI,EAoCJ;AACI,YAAM,UADV;AAEI,iBAAW,UAFf;AAGI,gBAAU,UAHd;AAII,cAAQ;AACJ,eAAO,KADH;AAEJ,eAAO,IAFH;AAGJ,eAAO,KAHH;AAIJ,iBAAS,IAJL;AAKJ,eAAO,IALH;AAMJ,gBAAQ;AANJ,OAJZ;AAYI,oBAAc;AACV,eAAO,IADG;AAEV,iBAAS,IAFC;AAGV,eAAO,IAHG;AAIV,gBAAQ;AAJE,OAZlB;AAkBI,kBAAY,IAlBhB;AAmBI,kBAAY,EAnBhB;AAoBI,iBAAW,CACP;AACI,cAAM,GADV;AAEI,gBAAQ,MAFZ;AAGI,uBAAe,YAHnB;AAII,gBAAQ;AAJZ,OADO,CApBf;AA4BI,eAAS,IA5Bb;AA6BI,aAAO,GA7BX;AA8BI,cAAQ,KA9BZ;AA+BI,gBAAU,GA/Bd;AAgCI,aAAO,CAhCX;AAiCI,cAAQ;AAjCZ,KApCI,EAuEJ;AACI,YAAM,UADV;AAEI,iBAAW,UAFf;AAGI,gBAAU,UAHd;AAII,cAAQ;AACJ,eAAO,IADH;AAEJ,eAAO,IAFH;AAGJ,eAAO,IAHH;AAIJ,iBAAS,IAJL;AAKJ,eAAO,IALH;AAMJ,gBAAQ;AANJ,OAJZ;AAYI,oBAAc;AACV,eAAO,IADG;AAEV,iBAAS,IAFC;AAGV,eAAO,CAAC,IAHE;AAIV,gBAAQ;AAJE,OAZlB;AAkBI,kBAAY,IAlBhB;AAmBI,kBAAY,EAnBhB;AAoBI,iBAAW,CACP;AACI,cAAM,GADV;AAEI,gBAAQ,MAFZ;AAGI,uBAAe,YAHnB;AAII,gBAAQ;AAJZ,OADO,CApBf;AA4BI,eAAS,IA5Bb;AA6BI,aAAO,GA7BX;AA8BI,cAAQ,IA9BZ;AA+BI,gBAAU,EA/Bd;AAgCI,aAAO,IAhCX;AAiCI,cAAQ;AAjCZ,KAvEI;AAfqB,GAAD,CAAhC;AA2HA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMS,SAAS,GAAG,YAAY;AAC1B,UAAMP,KAAK,CAACQ,GAAN,CAAU,qCAAV,EAAiDC,IAAjD,CAAsDC,GAAG,IAAIN,OAAO,CAACM,GAAG,CAACP,IAAL,CAApE,CAAN;AACA,UAAMH,KAAK,CAACQ,GAAN,CAAU,0CAAV,EAAsDC,IAAtD,CAA2DC,GAAG,IAAIJ,QAAQ,CAACI,GAAG,CAACP,IAAL,CAA1E,CAAN;AACH,GAHD;;AAKAN,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAY;AAACT,IAAAA;AAAD,GAAZ;AAEA,sBACI;AAAS,IAAA,SAAS,EAAC,YAAnB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAK,UAAA,GAAG,EAAEE,KAAK,CAAC,CAAD,CAAf;AAAoB,UAAA,SAAS,EAAC,MAA9B;AAAqC,UAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA,oBAAsBF,IAAI,CAACU,IAAL,CAAU,CAAV,EAAaC,IAAb,CAAkBC;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAQI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEV,KAAK,CAAC,CAAD,CAAf;AAAoB,YAAA,SAAS,EAAC,MAA9B;AAAqC,YAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBF,IAAI,CAACU,IAAL,CAAU,CAAV,EAAaC,IAAb,CAAkBC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,MAAf;AAAA,kCACI;AAAK,YAAA,GAAG,EAAEV,KAAK,CAAC,CAAD,CAAf;AAAoB,YAAA,SAAS,EAAC,MAA9B;AAAqC,YAAA,GAAG,EAAC;AAAzC;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA,sBAAsBF,IAAI,CAACU,IAAL,CAAU,CAAV,EAAaC,IAAb,CAAkBC;AAAxC;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YARJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH;;GAlKuBb,W;;KAAAA,W","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nconst { default: axios } = require('axios');\r\n\r\n// A card used to contain all data from api\r\nexport default function CardWeather(){\r\n\r\n    const [data, setData] = useState({\r\n        \"city\": {\r\n            \"id\": 2988507,\r\n            \"name\": \"Paris\",\r\n            \"coord\": {\r\n                \"lon\": 2.3488,\r\n                \"lat\": 48.8534\r\n            },\r\n            \"country\": \"FR\",\r\n            \"population\": 2138551,\r\n            \"timezone\": 3600\r\n        },\r\n        \"cod\": \"200\",\r\n        \"message\": 3.6684273,\r\n        \"cnt\": 3,\r\n        \"list\": [\r\n            {\r\n                \"dt\": 1638270000,\r\n                \"sunrise\": 1638256899,\r\n                \"sunset\": 1638287841,\r\n                \"temp\": {\r\n                    \"day\": 7.41,\r\n                    \"min\": 1.79,\r\n                    \"max\": 9.68,\r\n                    \"night\": 8.7,\r\n                    \"eve\": 9.68,\r\n                    \"morn\": 4.83\r\n                },\r\n                \"feels_like\": {\r\n                    \"day\": 3.85,\r\n                    \"night\": 5.4,\r\n                    \"eve\": 6.89,\r\n                    \"morn\": 0.87\r\n                },\r\n                \"pressure\": 1018,\r\n                \"humidity\": 83,\r\n                \"weather\": [\r\n                    {\r\n                        \"id\": 500,\r\n                        \"main\": \"Rain\",\r\n                        \"description\": \"light rain\",\r\n                        \"icon\": \"10d\"\r\n                    }\r\n                ],\r\n                \"speed\": 6.58,\r\n                \"deg\": 224,\r\n                \"gust\": 15.47,\r\n                \"clouds\": 100,\r\n                \"pop\": 0.2,\r\n                \"rain\": 0.22\r\n            },\r\n            {\r\n                \"dt\": 1638356400,\r\n                \"sunrise\": 1638343377,\r\n                \"sunset\": 1638374208,\r\n                \"temp\": {\r\n                    \"day\": 10.38,\r\n                    \"min\": 6.79,\r\n                    \"max\": 10.67,\r\n                    \"night\": 6.79,\r\n                    \"eve\": 8.36,\r\n                    \"morn\": 8.95\r\n                },\r\n                \"feels_like\": {\r\n                    \"day\": 9.43,\r\n                    \"night\": 3.96,\r\n                    \"eve\": 5.79,\r\n                    \"morn\": 5.26\r\n                },\r\n                \"pressure\": 1002,\r\n                \"humidity\": 75,\r\n                \"weather\": [\r\n                    {\r\n                        \"id\": 500,\r\n                        \"main\": \"Rain\",\r\n                        \"description\": \"light rain\",\r\n                        \"icon\": \"10d\"\r\n                    }\r\n                ],\r\n                \"speed\": 8.17,\r\n                \"deg\": 223,\r\n                \"gust\": 17.45,\r\n                \"clouds\": 100,\r\n                \"pop\": 1,\r\n                \"rain\": 2.72\r\n            },\r\n            {\r\n                \"dt\": 1638442800,\r\n                \"sunrise\": 1638429852,\r\n                \"sunset\": 1638460578,\r\n                \"temp\": {\r\n                    \"day\": 6.47,\r\n                    \"min\": 2.77,\r\n                    \"max\": 6.47,\r\n                    \"night\": 2.77,\r\n                    \"eve\": 2.99,\r\n                    \"morn\": 4.48\r\n                },\r\n                \"feels_like\": {\r\n                    \"day\": 3.48,\r\n                    \"night\": 0.68,\r\n                    \"eve\": -0.62,\r\n                    \"morn\": 1.33\r\n                },\r\n                \"pressure\": 1009,\r\n                \"humidity\": 57,\r\n                \"weather\": [\r\n                    {\r\n                        \"id\": 500,\r\n                        \"main\": \"Rain\",\r\n                        \"description\": \"light rain\",\r\n                        \"icon\": \"10d\"\r\n                    }\r\n                ],\r\n                \"speed\": 4.36,\r\n                \"deg\": 303,\r\n                \"gust\": 9.25,\r\n                \"clouds\": 30,\r\n                \"pop\": 0.99,\r\n                \"rain\": 2.35\r\n            }\r\n        ]\r\n    });\r\n    const [icons, setIcons] = useState([]);\r\n\r\n    const fetchData = async () => {\r\n        await axios.get('http://localhost:9000/weather?day=3').then(all => setData(all.data));\r\n        await axios.get('http://localhost:9000/weather/icon?day=3').then(all => setIcons(all.data));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchData();\r\n    }, []);\r\n\r\n    console.log({data});\r\n\r\n    return(\r\n        <section className='cont_meteo'>\r\n            <div className='today'>\r\n                <h3 className='title'>Today</h3>\r\n                <div className=\"meteo_data\">\r\n                    <img src={icons[0]} className='icon' alt=''/>\r\n                    <h4 className='temp'>{data.list[0].temp.day}</h4>\r\n                </div>\r\n            </div>\r\n            <div className='tomorrow'>\r\n                <h3 className='title'>Next days</h3>\r\n                <div className=\"forecast\">\r\n                    <div className='tmr'>\r\n                        <img src={icons[1]} className='icon' alt=''/>\r\n                        <h4 className='temp'>{data.list[1].temp.day}</h4>\r\n                    </div>\r\n                    <div className='tmr2'>\r\n                        <img src={icons[2]} className='icon' alt=''/>\r\n                        <h4 className='temp'>{data.list[2].temp.day}</h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );    \r\n}"]},"metadata":{},"sourceType":"module"}