{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tara0\\\\OneDrive\\\\Bureau\\\\Travail\\\\Ing 4\\\\Techno web\\\\PROJECT_WEB_OCRES\\\\frontend\\\\src\\\\components\\\\galerie.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { XYPlot, XAxis, YAxis, HorizontalGridLines, VerticalGridLines, LineMarkSeries, LineSeries, MarkSeries, VerticalRectSeries, Hint } from 'react-vis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  default: axios\n} = require('axios');\n\nconst ONE_DAY = 86400000;\n\nconst fetchEvents = async () => {\n  await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\n};\n\nfunction tara() {}\n\nuseEffect(() => {\n  fetchEvents(); //console.log( {events} );\n}, []);\nvar datas = [];\n\nfor (let i = 0; i < events.length; i++) {\n  datas.push({\n    x: i,\n    y: events[i].Album.ImageCount\n  });\n}\n\nconsole.log(\"coucou\");\nvar datasTime = [];\n\nfor (let i = 0; i < events.length; i++) {\n  datasTime.push({\n    x0: new Date(events[i].Album.LastUpdated).getTime(),\n    x: new Date(events[i].Album.LastUpdated).getTime() + ONE_DAY,\n    y: events[i].Album.ImageCount\n  });\n} // A card used to contain all data from api\n\n\nexport default class Graphs extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: datas,\n      hoveredNode: null,\n      radius: 10,\n      offset: 0\n    };\n  }\n\n  render() {\n    const [events, setEvents] = useState([]);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chart\",\n      children: [/*#__PURE__*/_jsxDEV(XYPlot, {\n        width: 500,\n        height: 500,\n        margin: 70,\n        onMouseLeave: () => this.setState({\n          hoveredNode: null\n        }),\n        children: [/*#__PURE__*/_jsxDEV(HorizontalGridLines, {\n          style: {\n            stroke: '#B7E9ED'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VerticalGridLines, {\n          style: {\n            stroke: '#B7E9ED'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          class: \"xaxis\",\n          title: \"Num\\xE9ro de l'\\xE9v\\xE8nement\",\n          style: {\n            fill: 'var(--text)',\n            line: {\n              stroke: '#ADDDE1'\n            },\n            ticks: {\n              stroke: '#ADDDE1'\n            },\n            text: {\n              stroke: 'none',\n              fill: 'var(--text)',\n              fontWeight: 600\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {\n          class: \"yaxis\",\n          title: \"Nombre de photos\",\n          style: {\n            fill: 'var(--text)',\n            text: {\n              stroke: 'none',\n              fill: 'var(--text)',\n              fontWeight: 600\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LineSeries, {\n          className: \"first-series\",\n          data: datas,\n          stroke: \"var(--text)\",\n          style: {\n            strokeWidth: 2.5,\n            fill: 'none'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(MarkSeries, {\n          className: \"second-series\",\n          data: datas,\n          stroke: \"var(--bg-secondary)\",\n          color: \"var(--text)\",\n          style: {\n            strokeWidth: 1,\n            fill: 'var(--bg-secondary)'\n          },\n          onValueClick: (datapoint, event) => {\n            console.log(datapoint.y + \" \" + events[datapoint.x].Album.Title); //handleClick(events,datapoint);\n\n            /*#__PURE__*/\n            _jsxDEV(Hint, {\n              value: datapoint\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"list\",\n        children: /*#__PURE__*/_jsxDEV(List, {\n          events: events\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(XYPlot, {\n        margin: 70,\n        xType: \"time\",\n        width: 1000,\n        height: 600,\n        children: [/*#__PURE__*/_jsxDEV(VerticalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalGridLines, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(VerticalRectSeries, {\n          data: datasTime,\n          style: {\n            stroke: 'var(--text)'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction List(props) {\n  var list = [];\n\n  for (let i = 0; i < props.events.length; i++) {\n    list.push({\n      \"id\": i,\n      \"date\": props.events[i].Album.LastUpdated,\n      \"nom\": props.events[i].Album.Title,\n      \"nb\": props.events[i].Album.ImageCount\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: list.map(event => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"lieu\",\n        children: [\"N\\xB0\", event.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"date\",\n        children: [\"Date : \", event.date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"nom\",\n        children: [\"Nom : \", event.nom]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"photo\",\n        children: [\"Nb photos : \", event.nb]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }, this))\n  }, void 0, false);\n}\n\n_c = List;\n\nfunction handleClick(props, i) {\n  console.log(\"oui\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Hint, {\n      value: i,\n      style: {\n        fontSize: 2,\n        value: {\n          color: 'red'\n        }\n      },\n      children: \"test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["C:/Users/tara0/OneDrive/Bureau/Travail/Ing 4/Techno web/PROJECT_WEB_OCRES/frontend/src/components/galerie.js"],"names":["React","Component","useEffect","useState","XYPlot","XAxis","YAxis","HorizontalGridLines","VerticalGridLines","LineMarkSeries","LineSeries","MarkSeries","VerticalRectSeries","Hint","default","axios","require","ONE_DAY","fetchEvents","get","then","all","setEvents","data","tara","datas","i","events","length","push","x","y","Album","ImageCount","console","log","datasTime","x0","Date","LastUpdated","getTime","Graphs","state","hoveredNode","radius","offset","render","setState","stroke","fill","line","ticks","text","fontWeight","strokeWidth","datapoint","event","Title","List","props","list","map","id","date","nom","nb","handleClick","fontSize","value","color"],"mappings":"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","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\r\nimport {\r\n  XYPlot,\r\n  XAxis,\r\n  YAxis,\r\n  HorizontalGridLines,\r\n  VerticalGridLines,\r\n  LineMarkSeries,\r\n  LineSeries,\r\n  MarkSeries,\r\n  VerticalRectSeries,\r\n  Hint,\r\n} from 'react-vis';\r\n\r\nconst { default: axios } = require('axios');\r\n\r\nconst ONE_DAY = 86400000;\r\n\r\n\r\n\r\nconst fetchEvents = async () => {\r\n    await axios.get('http://localhost:9000/albums').then(all => setEvents(all.data));\r\n}\r\n\r\nfunction tara(){}\r\nuseEffect(() => {\r\n    fetchEvents();\r\n    //console.log( {events} );\r\n}, []);\r\n\r\nvar datas = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n        datas.push({x: i, y: events[i].Album.ImageCount});\r\n    }\r\n    console.log(\"coucou\");\r\n\r\n    var datasTime = [];\r\n    for (let i = 0; i < events.length; i++) {\r\n        datasTime.push(\r\n            {\r\n                x0: new Date(events[i].Album.LastUpdated).getTime(), \r\n                x:  new Date(events[i].Album.LastUpdated).getTime() + ONE_DAY, \r\n                y:  events[i].Album.ImageCount\r\n            }\r\n        );\r\n    }\r\n\r\n// A card used to contain all data from api\r\nexport default class Graphs extends Component{\r\n\r\n    /**\r\n     * Same as precedent datas just added the real time to put them in the chart and order them\r\n     * Elements are stored like that \r\n     * \"LastUpdated\": \"2021-09-24 04:59:39\"\r\n     */\r\n    \r\n\r\n    state = {\r\n    data: datas,\r\n    hoveredNode: null,\r\n    radius: 10,\r\n    offset: 0\r\n    };\r\n\r\n    render() {\r\n\r\n        const [events, setEvents] = useState([]);\r\n\r\n        return (\r\n            <div className='chart'>\r\n                <XYPlot width={500} height={500} margin={70} onMouseLeave={() => this.setState({hoveredNode: null})}>\r\n                    <HorizontalGridLines style={{stroke: '#B7E9ED'}} />\r\n                    <VerticalGridLines style={{stroke: '#B7E9ED'}} />\r\n                    <XAxis class=\"xaxis\"\r\n                        title=\"Numéro de l'évènement\"\r\n                        style={{\r\n                            fill: 'var(--text)',\r\n                            line: {stroke: '#ADDDE1'},\r\n                            ticks: {stroke: '#ADDDE1'},\r\n                            text: {stroke: 'none', fill: 'var(--text)', fontWeight: 600}\r\n                        }}\r\n                    />\r\n                    <YAxis class=\"yaxis\" title=\"Nombre de photos\" style={{fill: 'var(--text)', text: {stroke: 'none', fill: 'var(--text)', fontWeight: 600}}}/>\r\n                    <LineSeries\r\n                        className=\"first-series\"\r\n                        data={datas}\r\n                        stroke='var(--text)'\r\n                        style={{\r\n                            strokeWidth: 2.5,\r\n                            fill: 'none'\r\n                        }}\r\n                    />\r\n\r\n                    <MarkSeries\r\n                        className=\"second-series\"\r\n                        data={datas}\r\n                        stroke='var(--bg-secondary)'\r\n                        color='var(--text)'\r\n                        style={{\r\n                            strokeWidth: 1,\r\n                            fill: 'var(--bg-secondary)'\r\n                        }}\r\n                        onValueClick={(datapoint, event) => {\r\n                            console.log(datapoint.y + \" \" + events[datapoint.x].Album.Title);\r\n                            //handleClick(events,datapoint);\r\n                            <Hint value={datapoint}/>\r\n                        }}\r\n                    />\r\n                </XYPlot>\r\n                <div className='list'>\r\n                    <List events={events}/>\r\n                </div>\r\n                <XYPlot\r\n                    margin={70}\r\n                    xType=\"time\"\r\n                    width={1000}\r\n                    height={600}>\r\n                    <VerticalGridLines />\r\n                    <HorizontalGridLines />\r\n                    <XAxis />\r\n                    <YAxis />\r\n                    <VerticalRectSeries data={datasTime} style={{stroke: 'var(--text)'}} />\r\n                </XYPlot>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction List(props){\r\n\r\n    var list = [];\r\n\r\n    for (let i = 0; i < props.events.length; i++) {\r\n        list.push({\r\n            \"id\":i,\r\n            \"date\": props.events[i].Album.LastUpdated,\r\n            \"nom\": props.events[i].Album.Title,\r\n            \"nb\": props.events[i].Album.ImageCount\r\n        });\r\n    }\r\n\r\n    return(\r\n        <>\r\n            {list.map(event => (\r\n                <div className='event'>\r\n                    <h3 className='lieu'>N°{event.id}</h3>\r\n                    <h5 className='date'>Date : {event.date}</h5>\r\n                    <h5 className='nom'>Nom : {event.nom}</h5>\r\n                    <h5 className='photo'>Nb photos : {event.nb}</h5>\r\n                </div>\r\n            ))}\r\n        </>\r\n    );\r\n}\r\n\r\nfunction handleClick(props,i){\r\n    console.log(\"oui\");\r\n\r\n    return (\r\n        <>\r\n            <Hint value={i} style={{\r\n                fontSize: 2,\r\n                value: {\r\n                    color: 'red'\r\n                }}}>\r\n            test\r\n            </Hint>\r\n        </>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}